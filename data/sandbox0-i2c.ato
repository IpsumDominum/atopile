pin gnd

def i2c(Vsupply):
    pin gnd
    pin sda
    pin scl

    type[sda] = new type(sda)
    type[scl] = new type(scl)

    state on:
        function V[sda:gnd] = (Vsupply/2 to Vsupply) + I[sda:gnd] * 0.1kR
        limit -10mA < I[sda:gnd] < 10mA

def micro():
    pin vcc ~ 1
    pin gnd ~ 2

    def i2c() from i2c(Vsupply=V[vcc:gnd]):
        pin gnd: gnd
        pin sda: 3
        pin scl: 4

        limit -10mA < I[sda:gnd] < 10mA

def:
    pin vcc ~ 1
    pin gnd ~ 2
    package = ''

a = micro()

def BrushlessMotorDriver(speed: int):
    micro = Esp32()
    fetA = Mosfet()

    fetA.gate ~ micro.pwm_out

motor_driver = BrushlessMotorDriver()

i2ca = i2c(speed=6)
i2cb = i2c(speed=6)

i2ca ~ i2cb
i2ca.gnd ~ gnd
